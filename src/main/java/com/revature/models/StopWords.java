package com.revature.models;

import com.revature.models.StopWords;

public enum StopWords {
	I("i"), 
	ME("me"),
	MY("my"),
	MYSELF("myself"),
	WE("we"),
	OUR("our"),
	OURS("ours"),
	OURSELVES("ourselves"),
	YOU("you"),
	YOUR("your"),
	YOURS("yours"),
	YOURSELF("yourself"),
	YOURSELVES("yourselves"),
	HE("he"),
	HIM("him"),
	HIS("his"),
	HIMSELF("himself"),
	SHE("she"),
	HER("her"),
	HERS("hers"),
	HERSELF("herself"),
	IT("it"),
	ITS("its"),
	ITSELF("itself"),
	THEY("they"),
	THEM("them"),
	THEIR("their"),
	THEIRS("theirs"),
	THEMSELVES("themselves"),
	WHAT("what"),
	WHICH("which"),
	WHO("who"),
	WHOM("whom"),
	THIS("this"),
	THAT("that"),
	THESE("these"),
	THOSE("those"),
	A("a"),
	AM("am"),
	IS("is"),
	ARE("are"),
	WAS("was"),
	WERE("were"),
	BE("be"),
	BEEN("been"),
	BEING("being"),
	HAVE("have"),
	HAS("has"),
	HAD("had"),
	HAVING("having"),
	DO("do"),
	DOES("does"),
	DID("did"),
	DOING("doing"),
	AN("an"),
	THE("the"),
	AND("and"),
	BUT("but"),
	IF("if"),
	OR("or"),
	BECAUSE("because"),
	AS("as"),
	UNTIL("until"),
	WHILE("while"),
	OF("or"),
	AT("at"),
	BY("by"),
	FOR("for"),
	WITH("with"),
	ABOUT("about"),
	AGAINST("against"),
	BETWEEN("between"),
	INTO("into"),
	THROUGH("through"),
	DURING("during"),
	BEFORE("before"),
	AFTER("after"),
	ABOVE("above"),
	BELOW("below"),
	TO("to"),
	FROM("from"),
	UP("up"),
	DOWN("down"),
	IN("in"),
	OUT("out"),
	ON("on"),
	OFF("off"),
	OVER("over"),
	UNDER("under"),
	AGAIN("again"),
	FURTHER("further"),
	THEN("then"),
	ONCE("once"),
	HERE("here"),
	THERE("there"),
	WHEN("when"),
	WHERE("where"),
	WHY("why"),
	HOW("how"),
	ALL("all"),
	ANY("any"),
	BOTH("both"),
	EACH("each"),
	FEW("few"),
	MORE("more"),
	MOST("most"),
	OTHER("other"),
	SOME("some"),
	SUCH("such"),
	NO("no"),
	NOR("nor"),
	NOT("not"),
	ONLY("only"),
	OWN("own"),
	SAME("same"),
	SO("so"),
	THAN("than"),
	TOO("too"),
	VERY("very"),
	CAN("can"),
	WILL("will"),
	JUST("just"),
	DON("don"),
	SHOULD("should"),
	NOW("now"),
	;

	private String value;

	private StopWords(String value) {
		this.value = value;
	}
	
	public static boolean contains(String value) {
		
		try {
			if(StopWords.valueOf(value.toUpperCase()).toString() == value.toUpperCase()) {
				return true;
			}
			
		}catch (IllegalArgumentException e) {
			return false;
		}
		return true;	
	}
	
	
	
}
